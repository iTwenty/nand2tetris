// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    Mux16(
    a[0] = out0, 
    a[1] = out1, 
    a[2] = out2, 
    a[3] = out3, 
    a[4] = out4,
    a[5] = out5, 
    a[6] = out6, 
    a[7] = out7, 
    a[8] = out8, 
    a[9] = out9, 
    a[10] = out10, 
    a[11] = out11, 
    a[12] = out12, 
    a[13] = out13, 
    a[14] = out14, 
    a[15] = out15, 
    b = in, sel = load, 
    out[0] = muxOut0, 
    out[1] = muxOut1, 
    out[2] = muxOut2, 
    out[3] = muxOut3, 
    out[4] = muxOut4, 
    out[5] = muxOut5, 
    out[6] = muxOut6, 
    out[7] = muxOut7, 
    out[8] = muxOut8, 
    out[9] = muxOut9, 
    out[10] = muxOut10, 
    out[11] = muxOut11, 
    out[12] = muxOut12, 
    out[13] = muxOut13, 
    out[14] = muxOut14, 
    out[15] = muxOut15);
    DFF(in = muxOut0, out = out0, out = out[0]);
    DFF(in = muxOut1, out = out1, out = out[1]);
    DFF(in = muxOut2, out = out2, out = out[2]);
    DFF(in = muxOut3, out = out3, out = out[3]);
    DFF(in = muxOut4, out = out4, out = out[4]);
    DFF(in = muxOut5, out = out5, out = out[5]);
    DFF(in = muxOut6, out = out6, out = out[6]);
    DFF(in = muxOut7, out = out7, out = out[7]);
    DFF(in = muxOut8, out = out8, out = out[8]);
    DFF(in = muxOut9, out = out9, out = out[9]);
    DFF(in = muxOut10, out = out10, out = out[10]);
    DFF(in = muxOut11, out = out11, out = out[11]);
    DFF(in = muxOut12, out = out12, out = out[12]);
    DFF(in = muxOut13, out = out13, out = out[13]);
    DFF(in = muxOut14, out = out14, out = out[14]);
    DFF(in = muxOut15, out = out15, out = out[15]);
}
