// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(
        in = load, 
        sel = address[9..11], 
        a = loadRam0,
        b = loadRam1,
        c = loadRam2,
        d = loadRam3,
        e = loadRam4,
        f = loadRam5,
        g = loadRam6,
        h = loadRam7
    );
    RAM512(in = in, load = loadRam0, address = address[0..8], out = outRam0);
    RAM512(in = in, load = loadRam1, address = address[0..8], out = outRam1);
    RAM512(in = in, load = loadRam2, address = address[0..8], out = outRam2);
    RAM512(in = in, load = loadRam3, address = address[0..8], out = outRam3);
    RAM512(in = in, load = loadRam4, address = address[0..8], out = outRam4);
    RAM512(in = in, load = loadRam5, address = address[0..8], out = outRam5);
    RAM512(in = in, load = loadRam6, address = address[0..8], out = outRam6);
    RAM512(in = in, load = loadRam7, address = address[0..8], out = outRam7);
    Mux8Way16(
        a = outRam0,
        b = outRam1,
        c = outRam2,
        d = outRam3,
        e = outRam4,
        f = outRam5,
        g = outRam6,
        h = outRam7,
        sel = address[9..11],
        out = out
    );
}